<UserControl
    x:Class="Siterm.WPF.Controls.CreateInstructionControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:Siterm.WPF.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wpf="clr-namespace:Siterm.WPF"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock
            Margin="0,5,10,5"
            Text="{x:Static wpf:UiStrings.CreateInstructionForLabel}"
            TextAlignment="Right" />
        <ComboBox
            Grid.Row="0"
            Grid.Column="1"
            Margin="5,2"
            IsReadOnly="True"
            ItemsSource="{Binding Path=DeviceList, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}"
            SelectedItem="{Binding Path=InstructionDraft.Device, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectionLimited, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>
        <TextBlock
            Grid.Row="1"
            Grid.Column="0"
            Margin="0,0,10,0"
            VerticalAlignment="Center"
            Text="{x:Static wpf:UiStrings.InstructionExceptForLabel}"
            TextAlignment="Right">
            <TextBlock.Style>
                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectionLimited, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}" Value="true">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBox
            Grid.Row="1"
            Grid.Column="1"
            Margin="5,2"
            Text="{Binding Path=InstructionDraft.ExceptFor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}">
            <TextBox.Style>
                <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectionLimited, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}" Value="true">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <TextBlock
            Grid.Row="2"
            Grid.Column="0"
            Margin="0,0,10,0"
            VerticalAlignment="Center"
            Text="{x:Static wpf:UiStrings.InstructionOnlyForLabel}"
            TextAlignment="Right">
            <TextBlock.Style>
                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectionLimited, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}" Value="true">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBox
            Grid.Row="2"
            Grid.Column="1"
            Margin="5,2"
            Text="{Binding Path=InstructionDraft.OnlyFor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}">
            <TextBox.Style>
                <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectionLimited, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}" Value="true">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <TextBlock
            Grid.Row="3"
            Grid.Column="0"
            Margin="0,0,10,0"
            VerticalAlignment="Center"
            Text="{x:Static wpf:UiStrings.Instructor}"
            TextAlignment="Right" />
        <local:UserInputBox
            Grid.Row="3"
            Grid.Column="1"
            Margin="5,2"
            UserDraft="{Binding Path=InstructionDraft.Instructor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}"
            UserEmailList="{Binding Path=UserEmailList, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}" />
        <TextBlock
            Grid.Row="4"
            Grid.Column="0"
            Margin="0,0,10,0"
            Padding="0,5,0,0"
            VerticalAlignment="Top"
            Text="{x:Static wpf:UiStrings.Instructed}"
            TextAlignment="Right" />
        <ItemsControl
            Grid.Row="4"
            Grid.Column="1"
            Focusable="False"
            ItemsSource="{Binding Path=InstructionDraft.Instructed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <local:UserInputBox
                        Margin="5,2"
                        UserDraft="{Binding}"
                        UserEmailList="{Binding Path=UserEmailList, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <StackPanel
            Grid.Row="5"
            Grid.Column="1"
            Orientation="Horizontal">
            <Button
                x:Name="AddInstructedBtn"
                Width="32"
                Height="32"
                HorizontalAlignment="Left"
                Click="AddInstructedBtn_OnClick"
                Style="{DynamicResource MahApps.Styles.Button.Circle}">
                <iconPacks:PackIconMaterial Kind="Plus" />
            </Button>
            <Button
                x:Name="RemoveInstructedBtn"
                Width="32"
                Height="32"
                HorizontalAlignment="Left"
                Click="RemoveInstructedBtn_OnClick"
                Style="{DynamicResource MahApps.Styles.Button.Circle}">
                <iconPacks:PackIconMaterial Kind="Minus" />
            </Button>
        </StackPanel>
        <Button
            Grid.Row="6"
            Grid.Column="1"
            Width="250"
            Margin="5,2"
            HorizontalAlignment="Left"
            Command="{Binding Path=CreateInstructionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CreateInstructionControl}}}"
            Content="{x:Static wpf:UiStrings.CreateInstructionBtn}" />
    </Grid>
</UserControl>
